{
  "schema": "3.0.1",
  "version": "3.0.1",
  "definitions": [
    {
      "name": "AbpLoginResult",
      "type": "object",
      "properties": [
        {
          "name": "result",
          "modelType": "LoginResultType",
          "nullable": true
        },
        {
          "name": "description",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ActionApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "uniqueName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "httpMethod",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "url",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "supportedVersions",
          "modelType": "string[]",
          "nullable": false
        },
        {
          "name": "parametersOnMethod",
          "modelType": "MethodParameterApiDescriptionModel[]",
          "nullable": false
        },
        {
          "name": "parameters",
          "modelType": "ParameterApiDescriptionModel[]",
          "nullable": false
        },
        {
          "name": "returnValue",
          "modelType": "ReturnValueApiDescriptionModel",
          "nullable": true
        },
        {
          "name": "allowAnonymous",
          "modelType": "boolean",
          "nullable": true
        },
        {
          "name": "implementFrom",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "AddDriverTagDto",
      "type": "object",
      "properties": [
        {
          "name": "tagId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "address",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "AggregateType",
      "type": "string",
      "properties": [],
      "values": [
        "Hour",
        "Shift",
        "Day",
        "Week",
        "Month",
        "Season",
        "Year"
      ]
    },
    {
      "name": "ApplicationApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "modules",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "types",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ApplicationAuthConfigurationDto",
      "type": "object",
      "properties": [
        {
          "name": "policies",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "grantedPolicies",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ApplicationConfigurationDto",
      "type": "object",
      "properties": [
        {
          "name": "localization",
          "modelType": "ApplicationLocalizationConfigurationDto",
          "nullable": true
        },
        {
          "name": "auth",
          "modelType": "ApplicationAuthConfigurationDto",
          "nullable": true
        },
        {
          "name": "setting",
          "modelType": "ApplicationSettingConfigurationDto",
          "nullable": true
        },
        {
          "name": "currentUser",
          "modelType": "CurrentUserDto",
          "nullable": true
        },
        {
          "name": "features",
          "modelType": "ApplicationFeatureConfigurationDto",
          "nullable": true
        },
        {
          "name": "multiTenancy",
          "modelType": "MultiTenancyInfoDto",
          "nullable": true
        },
        {
          "name": "currentTenant",
          "modelType": "CurrentTenantDto",
          "nullable": true
        },
        {
          "name": "timing",
          "modelType": "TimingDto",
          "nullable": true
        },
        {
          "name": "clock",
          "modelType": "ClockDto",
          "nullable": true
        },
        {
          "name": "objectExtensions",
          "modelType": "ObjectExtensionsDto",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ApplicationFeatureConfigurationDto",
      "type": "object",
      "properties": [
        {
          "name": "values",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ApplicationLocalizationConfigurationDto",
      "type": "object",
      "properties": [
        {
          "name": "values",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "languages",
          "modelType": "LanguageInfo[]",
          "nullable": false
        },
        {
          "name": "currentCulture",
          "modelType": "CurrentCultureDto",
          "nullable": true
        },
        {
          "name": "defaultResourceName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "languagesMap",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "languageFilesMap",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ApplicationSettingConfigurationDto",
      "type": "object",
      "properties": [
        {
          "name": "values",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "AppTreeDto",
      "type": "object",
      "properties": [
        {
          "name": "application",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "count",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "nodes",
          "modelType": "AppTreeNodeDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "AppTreeNodeDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "displayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "level",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "isRoot",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "isLeaf",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "application",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "icon",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "entityId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "entityType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "children",
          "modelType": "AppTreeNodeDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "AppTreeNodeDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "AppTreeNodeDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "BackgroundWorkerInstanceDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "status",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "entityType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "entityId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "assemblyName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "cronExpression",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "jsonArgs",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "startTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastStopTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "totalStartCount",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "lastRunTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastRunSeconds",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "nextRunTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "totalRunCount",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "totalFailureCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "BackgroundWorkerInstanceDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "BackgroundWorkerInstanceDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "BackgroundWorkerLogDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "instanceId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "runSeconds",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "LogLevel",
          "nullable": true
        },
        {
          "name": "message",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "stackTrace",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creationTime",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "BackgroundWorkerLogDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "BackgroundWorkerLogDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ChangePasswordInput",
      "type": "object",
      "properties": [
        {
          "name": "currentPassword",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "newPassword",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ChannelType",
      "type": "string",
      "properties": [],
      "values": [
        "Network",
        "SerialPort",
        "Database"
      ]
    },
    {
      "name": "ClockDto",
      "type": "object",
      "properties": [
        {
          "name": "kind",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ControllerApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "controllerName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "controllerGroupName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isRemoteService",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "apiVersion",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "interfaces",
          "modelType": "ControllerInterfaceApiDescriptionModel[]",
          "nullable": false
        },
        {
          "name": "actions",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ControllerInterfaceApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "CreateAppTreeNodeDto",
      "type": "object",
      "properties": [
        {
          "name": "application",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "entityId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "entityType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "displayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "icon",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "CreateDeviceDto",
      "type": "object",
      "properties": [
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "locationId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "CreateDriverDefinitionDto",
      "type": "object",
      "properties": [],
      "values": []
    },
    {
      "name": "CreateDriverDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "host",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "port",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "userName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "password",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "driverDefinitionId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "interval",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "timeout",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "retryCount",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "settings",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "CreateMaterialTypeDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "CreateNodeDto",
      "type": "object",
      "properties": [
        {
          "name": "nodeTypeId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "CreateNodeMaterialTypeDto",
      "type": "object",
      "properties": [
        {
          "name": "materialTypeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "flowType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "maxValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "minValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "equipmentNumber",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "singleValue",
          "modelType": "number",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "CreateNodePropertyDto",
      "type": "object",
      "properties": [
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "propertyCode",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "tagId",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "CreateNodeTypeDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "CreatePropertyDefinitionDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "unit",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "valueType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "source",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "CreatePropertyDto",
      "type": "object",
      "properties": [
        {
          "name": "entityType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "entityId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "propertyDefinitionId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isMain",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "maxValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "minValue",
          "modelType": "number",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "CreateTagDefinitionDto",
      "type": "object",
      "properties": [
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "unit",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "scale",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "valueType",
          "modelType": "TagValueType",
          "nullable": true
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "interval",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "readMode",
          "modelType": "ReadMode",
          "nullable": true
        },
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "CreateTagDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "interval",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "deviceId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "readMode",
          "modelType": "ReadMode",
          "nullable": true
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "expression",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "tagType",
          "modelType": "TagType",
          "nullable": true
        },
        {
          "name": "tagDefinitionId",
          "modelType": "string",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "CurrentCultureDto",
      "type": "object",
      "properties": [
        {
          "name": "displayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "englishName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "threeLetterIsoLanguageName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "twoLetterIsoLanguageName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isRightToLeft",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "cultureName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nativeName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "dateTimeFormat",
          "modelType": "DateTimeFormatDto",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "CurrentTenantDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isAvailable",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "CurrentUserDto",
      "type": "object",
      "properties": [
        {
          "name": "isAuthenticated",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "tenantId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "impersonatorUserId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "impersonatorTenantId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "impersonatorUserName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "impersonatorTenantName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "userName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "surName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "email",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "emailVerified",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "phoneNumber",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "phoneNumberVerified",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "roles",
          "modelType": "string[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "DashboardStatistic",
      "type": "object",
      "properties": [
        {
          "name": "driver",
          "modelType": "StatisticItem",
          "nullable": true
        },
        {
          "name": "tag",
          "modelType": "StatisticItem",
          "nullable": true
        },
        {
          "name": "device",
          "modelType": "StatisticItem",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "DateTimeFormatDto",
      "type": "object",
      "properties": [
        {
          "name": "calendarAlgorithmType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "dateTimeFormatLong",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "shortDatePattern",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "fullDateTimePattern",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "dateSeparator",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "shortTimePattern",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "longTimePattern",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "DeviceDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creationTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creatorId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModificationTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModifierId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "locationId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "location",
          "modelType": "LocationDto",
          "nullable": true
        },
        {
          "name": "status",
          "modelType": "DeviceStatus",
          "nullable": true
        },
        {
          "name": "parent",
          "modelType": "DeviceDto",
          "nullable": true
        },
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "isGateway",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "deviceKey",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "ipAddress",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "tags",
          "modelType": "TagDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "DeviceDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "DeviceDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "DeviceStatus",
      "type": "string",
      "properties": [],
      "values": [
        "Unknown",
        "Closed",
        "Normal",
        "Fault"
      ]
    },
    {
      "name": "DriverDefinitionDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creationTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creatorId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModificationTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModifierId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "assemblyName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "className",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "subcategory",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "channelType",
          "modelType": "ChannelType",
          "nullable": true
        },
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "usageType",
          "modelType": "DriverUsageType",
          "nullable": true
        },
        {
          "name": "workMode",
          "modelType": "DriverWorkMode",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "DriverDefinitionDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "DriverDefinitionDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "DriverDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creationTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creatorId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModificationTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModifierId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "driverDefinitionId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "driverDefinition",
          "modelType": "DriverDefinitionDto",
          "nullable": true
        },
        {
          "name": "host",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "port",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "interval",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "timeout",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "retryCount",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "tags",
          "modelType": "TagDto[]",
          "nullable": false
        },
        {
          "name": "runState",
          "modelType": "DriverRunState",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "DriverDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "DriverDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "DriverRunState",
      "type": "string",
      "properties": [],
      "values": [
        "Stop",
        "Running",
        "Pause"
      ]
    },
    {
      "name": "DriverUsageType",
      "type": "string",
      "properties": [],
      "values": [
        "Reader",
        "Writer",
        "Store",
        "Publisher"
      ]
    },
    {
      "name": "DriverWorkMode",
      "type": "string",
      "properties": [],
      "values": [
        "Pull",
        "Listen"
      ]
    },
    {
      "name": "EmailSettingsDto",
      "type": "object",
      "properties": [
        {
          "name": "smtpHost",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "smtpPort",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "smtpUserName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "smtpPassword",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "smtpDomain",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "smtpEnableSsl",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "smtpUseDefaultCredentials",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "defaultFromAddress",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "defaultFromDisplayName",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "EntityExtensionDto",
      "type": "object",
      "properties": [
        {
          "name": "properties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "configuration",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionEnumDto",
      "type": "object",
      "properties": [
        {
          "name": "fields",
          "modelType": "ExtensionEnumFieldDto[]",
          "nullable": false
        },
        {
          "name": "localizationResource",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionEnumFieldDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "any | null",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyApiCreateDto",
      "type": "object",
      "properties": [
        {
          "name": "isAvailable",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyApiDto",
      "type": "object",
      "properties": [
        {
          "name": "onGet",
          "modelType": "ExtensionPropertyApiGetDto",
          "nullable": true
        },
        {
          "name": "onCreate",
          "modelType": "ExtensionPropertyApiCreateDto",
          "nullable": true
        },
        {
          "name": "onUpdate",
          "modelType": "ExtensionPropertyApiUpdateDto",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyApiGetDto",
      "type": "object",
      "properties": [
        {
          "name": "isAvailable",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyApiUpdateDto",
      "type": "object",
      "properties": [
        {
          "name": "isAvailable",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyAttributeDto",
      "type": "object",
      "properties": [
        {
          "name": "typeSimple",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "config",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyDto",
      "type": "object",
      "properties": [
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "typeSimple",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "displayName",
          "modelType": "LocalizableStringDto",
          "nullable": true
        },
        {
          "name": "api",
          "modelType": "ExtensionPropertyApiDto",
          "nullable": true
        },
        {
          "name": "ui",
          "modelType": "ExtensionPropertyUiDto",
          "nullable": true
        },
        {
          "name": "attributes",
          "modelType": "ExtensionPropertyAttributeDto[]",
          "nullable": false
        },
        {
          "name": "configuration",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "defaultValue",
          "modelType": "any | null",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyUiDto",
      "type": "object",
      "properties": [
        {
          "name": "onTable",
          "modelType": "ExtensionPropertyUiTableDto",
          "nullable": true
        },
        {
          "name": "onCreateForm",
          "modelType": "ExtensionPropertyUiFormDto",
          "nullable": true
        },
        {
          "name": "onEditForm",
          "modelType": "ExtensionPropertyUiFormDto",
          "nullable": true
        },
        {
          "name": "lookup",
          "modelType": "ExtensionPropertyUiLookupDto",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyUiFormDto",
      "type": "object",
      "properties": [
        {
          "name": "isVisible",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyUiLookupDto",
      "type": "object",
      "properties": [
        {
          "name": "url",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "resultListPropertyName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "displayPropertyName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "valuePropertyName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "filterParamName",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ExtensionPropertyUiTableDto",
      "type": "object",
      "properties": [
        {
          "name": "isVisible",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "FeatureDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "displayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "provider",
          "modelType": "FeatureProviderDto",
          "nullable": true
        },
        {
          "name": "description",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "valueType",
          "modelType": "IStringValueType",
          "nullable": true
        },
        {
          "name": "depth",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "parentName",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "FeatureGroupDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "displayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "features",
          "modelType": "FeatureDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "FeatureProviderDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "key",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "FindTenantResultDto",
      "type": "object",
      "properties": [
        {
          "name": "success",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "tenantId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "FreshKeyDto",
      "type": "object",
      "properties": [
        {
          "name": "deviceKey",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "deviceId",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "GetAccFlowStatisticDto",
      "type": "object",
      "properties": [
        {
          "name": "day",
          "modelType": "GetAccFlowStatisticItemDto",
          "nullable": true
        },
        {
          "name": "shift",
          "modelType": "GetAccFlowStatisticItemDto",
          "nullable": true
        },
        {
          "name": "week",
          "modelType": "GetAccFlowStatisticItemDto",
          "nullable": true
        },
        {
          "name": "month",
          "modelType": "GetAccFlowStatisticItemDto",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "GetAccFlowStatisticItemDto",
      "type": "object",
      "properties": [
        {
          "name": "current",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "prev",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "ratio",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "GetFeatureListResultDto",
      "type": "object",
      "properties": [
        {
          "name": "groups",
          "modelType": "FeatureGroupDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "GetPermissionListResultDto",
      "type": "object",
      "properties": [
        {
          "name": "entityDisplayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "groups",
          "modelType": "PermissionGroupDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "GetRealFlowsItemDto",
      "type": "object",
      "properties": [
        {
          "name": "source",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "target",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IanaTimeZone",
      "type": "object",
      "properties": [
        {
          "name": "timeZoneName",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityRoleCreateDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isDefault",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "isPublic",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityRoleDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isDefault",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "isStatic",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "isPublic",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "concurrencyStamp",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityRoleDtoListResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "IdentityRoleDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityRoleDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "IdentityRoleDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityRoleUpdateDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isDefault",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "isPublic",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "concurrencyStamp",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityUserCreateDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "userName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "surname",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "email",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "phoneNumber",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "lockoutEnabled",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "roleNames",
          "modelType": "string[]",
          "nullable": false
        },
        {
          "name": "password",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityUserDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creationTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creatorId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModificationTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModifierId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "isDeleted",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "deleterId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "deletionTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "tenantId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "userName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "surname",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "email",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "emailConfirmed",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "phoneNumber",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "phoneNumberConfirmed",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "lockoutEnabled",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "lockoutEnd",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "concurrencyStamp",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityUserDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "IdentityUserDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityUserUpdateDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "userName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "surname",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "email",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "phoneNumber",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "lockoutEnabled",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "roleNames",
          "modelType": "string[]",
          "nullable": false
        },
        {
          "name": "password",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "concurrencyStamp",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IdentityUserUpdateRolesDto",
      "type": "object",
      "properties": [
        {
          "name": "roleNames",
          "modelType": "string[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "IStringValueType",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "properties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "validator",
          "modelType": "IValueValidator",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "IValueValidator",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "properties",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "LanguageInfo",
      "type": "object",
      "properties": [
        {
          "name": "cultureName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "uiCultureName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "displayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "flagIcon",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "LocalizableStringDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "resource",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "LocationDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creationTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creatorId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModificationTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModifierId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "parent",
          "modelType": "LocationDto",
          "nullable": true
        },
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "LoginResultType",
      "type": "string",
      "properties": [],
      "values": [
        "Success",
        "InvalidUserNameOrPassword",
        "NotAllowed",
        "LockedOut",
        "RequiresTwoFactor"
      ]
    },
    {
      "name": "LogLevel",
      "type": "string",
      "properties": [],
      "values": [
        "Info",
        "Warn",
        "Error"
      ]
    },
    {
      "name": "MaterialTypeDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "priority",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "demand",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "MaterialTypeDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "MaterialTypeDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "MethodParameterApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "typeAsString",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "typeSimple",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isOptional",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "defaultValue",
          "modelType": "any | null",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ModuleApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "rootPath",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remoteServiceName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "controllers",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ModuleExtensionDto",
      "type": "object",
      "properties": [
        {
          "name": "entities",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "configuration",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "MultiTenancyInfoDto",
      "type": "object",
      "properties": [
        {
          "name": "isEnabled",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NameValue",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NodeDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeTypeId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeType",
          "modelType": "NodeTypeDto",
          "nullable": true
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "materialTypes",
          "modelType": "NodeMaterialTypeDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NodeDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "NodeDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NodeMaterialTypeDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "materialTypeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "materialTypeCode",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "materialTypeName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "materialTypeCategory",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "materialTypeRemark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "flowType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "maxValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "minValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "equipmentNumber",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "singleValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "stateItems",
          "modelType": "NodeMaterialTypeStateDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NodeMaterialTypeDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "NodeMaterialTypeDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NodeMaterialTypeStateDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "materialTypeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeMaterialTypeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "state",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "singleValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "expression",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "parameterType",
          "modelType": "ParameterType",
          "nullable": true
        },
        {
          "name": "startDelayTime",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "endDelayTime",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "startTransitionTime",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "endTransitionTime",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NodePropertyDto",
      "type": "object",
      "properties": [
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "propertyCode",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "deviceId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "tagId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "onlyOnce",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "nodeName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NodePropertyDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "NodePropertyDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NodeTypeDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "NodeTypeDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "NodeTypeDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ObjectExtensionsDto",
      "type": "object",
      "properties": [
        {
          "name": "modules",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "enums",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "ParameterApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "nameOnMethod",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "jsonName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "typeSimple",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isOptional",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "defaultValue",
          "modelType": "any | null",
          "nullable": true
        },
        {
          "name": "constraintTypes",
          "modelType": "string[]",
          "nullable": false
        },
        {
          "name": "bindingSourceId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "descriptorName",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ParameterType",
      "type": "string",
      "properties": [],
      "values": [
        "Constant",
        "Decrease",
        "DecreasePercent",
        "Formula"
      ]
    },
    {
      "name": "PermissionGrantInfoDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "displayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "parentName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isGranted",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "allowedProviders",
          "modelType": "string[]",
          "nullable": false
        },
        {
          "name": "grantedProviders",
          "modelType": "ProviderInfoDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "PermissionGroupDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "displayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "permissions",
          "modelType": "PermissionGrantInfoDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ProfileDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "userName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "email",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "surname",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "phoneNumber",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isExternal",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "hasPassword",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "concurrencyStamp",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "PropertyApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "jsonName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "typeSimple",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isRequired",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "PropertyDefinitionDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "unit",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "defaultValue",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "valueType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "source",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "PropertyDefinitionDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "PropertyDefinitionDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "PropertyDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "entityType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "entityId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "propertyDefinitionId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isMain",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "maxValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "minValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "unit",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "defaultValue",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "valueType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "source",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "PropertyDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "PropertyDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ProviderInfoDto",
      "type": "object",
      "properties": [
        {
          "name": "providerName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "providerKey",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "RankValueDto",
      "type": "object",
      "properties": [
        {
          "name": "deviceId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeName",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ReadMode",
      "type": "string",
      "properties": [],
      "values": [
        "Read",
        "Write",
        "ReadWrite"
      ]
    },
    {
      "name": "RegisterDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "userName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "emailAddress",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "password",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "appName",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "RemoteServiceErrorInfo",
      "type": "object",
      "properties": [
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "message",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "details",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "data",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "validationErrors",
          "modelType": "RemoteServiceValidationErrorInfo[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "RemoteServiceErrorResponse",
      "type": "object",
      "properties": [
        {
          "name": "error",
          "modelType": "RemoteServiceErrorInfo",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "RemoteServiceValidationErrorInfo",
      "type": "object",
      "properties": [
        {
          "name": "message",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "members",
          "modelType": "string[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ResetPasswordDto",
      "type": "object",
      "properties": [
        {
          "name": "userId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "resetToken",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "password",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "ReturnValueApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "typeSimple",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "SampleDto",
      "type": "object",
      "properties": [
        {
          "name": "value",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "SaveBackgroundWorkerInstanceDto",
      "type": "object",
      "properties": [
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "status",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "cronExpression",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "SendPasswordResetCodeDto",
      "type": "object",
      "properties": [
        {
          "name": "email",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "appName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "returnUrl",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "returnUrlHash",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "StatisticItem",
      "type": "object",
      "properties": [
        {
          "name": "active",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "inactive",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "amount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TagDefinitionDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creationTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creatorId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModificationTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModifierId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "expression",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "unit",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "scale",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "valueType",
          "modelType": "TagValueType",
          "nullable": true
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "interval",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "valueLength",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "readMode",
          "modelType": "ReadMode",
          "nullable": true
        },
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "TagDefinitionDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "TagDefinitionDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TagDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creationTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "creatorId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModificationTime",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "lastModifierId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "address",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "expression",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "interval",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "deviceId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "deviceName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "tagType",
          "modelType": "TagType",
          "nullable": true
        },
        {
          "name": "tagDefinition",
          "modelType": "TagDefinitionDto",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "TagDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "TagDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TagRealMeasurementDto",
      "type": "object",
      "properties": [
        {
          "name": "timestamp",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "deviceId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "pressure",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "flow",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "flowAcc",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "temperature",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TagType",
      "type": "string",
      "properties": [],
      "values": [
        "IO",
        "User",
        "Computing",
        "System"
      ]
    },
    {
      "name": "TagValueAggrMeasurementDto",
      "type": "object",
      "properties": [
        {
          "name": "deviceId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "eventTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeName",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TagValueDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "tagId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "clock",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "tag",
          "modelType": "TagDto",
          "nullable": true
        },
        {
          "name": "creationTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "tagDefinition",
          "modelType": "TagDefinitionDto",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "TagValueDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "TagValueDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TagValueType",
      "type": "string",
      "properties": [],
      "values": [
        "String",
        "Boolean",
        "Int",
        "Float",
        "Json"
      ]
    },
    {
      "name": "TenantCreateDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "adminEmailAddress",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "adminPassword",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TenantDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "concurrencyStamp",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TenantDtoPagedResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "TenantDto[]",
          "nullable": false
        },
        {
          "name": "totalCount",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TenantUpdateDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "concurrencyStamp",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TimeValueDto",
      "type": "object",
      "properties": [
        {
          "name": "eventTime",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "TimeZone",
      "type": "object",
      "properties": [
        {
          "name": "iana",
          "modelType": "IanaTimeZone",
          "nullable": true
        },
        {
          "name": "windows",
          "modelType": "WindowsTimeZone",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "TimingDto",
      "type": "object",
      "properties": [
        {
          "name": "timeZone",
          "modelType": "TimeZone",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "TypeApiDescriptionModel",
      "type": "object",
      "properties": [
        {
          "name": "baseType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isEnum",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "enumNames",
          "modelType": "string[]",
          "nullable": false
        },
        {
          "name": "enumValues",
          "modelType": "object",
          "nullable": false
        },
        {
          "name": "genericArguments",
          "modelType": "string[]",
          "nullable": false
        },
        {
          "name": "properties",
          "modelType": "PropertyApiDescriptionModel[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateAppTreeNodeDto",
      "type": "object",
      "properties": [
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "displayName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "icon",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateDeviceDto",
      "type": "object",
      "properties": [
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "locationId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "UpdateDriverDefinitionDto",
      "type": "object",
      "properties": [],
      "values": []
    },
    {
      "name": "UpdateDriverDto",
      "type": "object",
      "properties": [
        {
          "name": "title",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "channelId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "driverDefinitionId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "interval",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "timeout",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "retryCount",
          "modelType": "number",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "UpdateDriverSettingsDto",
      "type": "object",
      "properties": [
        {
          "name": "settings",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "UpdateDriverTagDto",
      "type": "object",
      "properties": [
        {
          "name": "tagId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "address",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateEmailSettingsDto",
      "type": "object",
      "properties": [
        {
          "name": "smtpHost",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "smtpPort",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "smtpUserName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "smtpPassword",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "smtpDomain",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "smtpEnableSsl",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "smtpUseDefaultCredentials",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "defaultFromAddress",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "defaultFromDisplayName",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateExtraPropertiesDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "UpdateFeatureDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateFeaturesDto",
      "type": "object",
      "properties": [
        {
          "name": "features",
          "modelType": "UpdateFeatureDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateMaterialTypeDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateNodeDto",
      "type": "object",
      "properties": [
        {
          "name": "nodeTypeId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateNodeMaterialTypeDto",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "nodeName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "flowType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "type",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "maxValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "minValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "equipmentNumber",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "singleValue",
          "modelType": "number",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "UpdateNodePropertyDto",
      "type": "object",
      "properties": [
        {
          "name": "nodeId",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "propertyCode",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "tagId",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateNodeTypeDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdatePermissionDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "isGranted",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdatePermissionsDto",
      "type": "object",
      "properties": [
        {
          "name": "permissions",
          "modelType": "UpdatePermissionDto[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdateProfileDto",
      "type": "object",
      "properties": [
        {
          "name": "extraProperties",
          "modelType": "{}",
          "nullable": true
        },
        {
          "name": "userName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "email",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "surname",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "phoneNumber",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "concurrencyStamp",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdatePropertyDefinitionDto",
      "type": "object",
      "properties": [
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "category",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "unit",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "valueType",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "source",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UpdatePropertyDto",
      "type": "object",
      "properties": [
        {
          "name": "isMain",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "value",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "maxValue",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "minValue",
          "modelType": "number",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "UpdateTagDefinitionDto",
      "type": "object",
      "properties": [
        {
          "name": "code",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "unit",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "scale",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "valueType",
          "modelType": "TagValueType",
          "nullable": true
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "interval",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "readMode",
          "modelType": "ReadMode",
          "nullable": true
        },
        {
          "name": "parentId",
          "modelType": "string",
          "nullable": true
        }
      ],
      "values": []
    },
    {
      "name": "UpdateTagDto",
      "type": "object",
      "properties": [
        {
          "name": "interval",
          "modelType": "number",
          "nullable": true
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "deviceId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "readMode",
          "modelType": "ReadMode",
          "nullable": true
        },
        {
          "name": "isActive",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "remark",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rank",
          "modelType": "number",
          "nullable": false
        },
        {
          "name": "tagType",
          "modelType": "TagType",
          "nullable": true
        },
        {
          "name": "expression",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "tagDefinitionId",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UserData",
      "type": "object",
      "properties": [
        {
          "name": "id",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "tenantId",
          "modelType": "string",
          "nullable": true
        },
        {
          "name": "userName",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "name",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "surname",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "email",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "emailConfirmed",
          "modelType": "boolean",
          "nullable": false
        },
        {
          "name": "phoneNumber",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "phoneNumberConfirmed",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UserDataListResultDto",
      "type": "object",
      "properties": [
        {
          "name": "items",
          "modelType": "UserData[]",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "UserLoginInfo",
      "type": "object",
      "properties": [
        {
          "name": "userNameOrEmailAddress",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "password",
          "modelType": "string",
          "nullable": false
        },
        {
          "name": "rememberMe",
          "modelType": "boolean",
          "nullable": false
        }
      ],
      "values": []
    },
    {
      "name": "WindowsTimeZone",
      "type": "object",
      "properties": [
        {
          "name": "timeZoneId",
          "modelType": "string",
          "nullable": false
        }
      ],
      "values": []
    }
  ],
  "services": [
    {
      "name": "AbpApiDefinition",
      "paths": [
        {
          "path": "/api/abp/api-definition",
          "operationId": "get",
          "method": "get",
          "tag": "AbpApiDefinition",
          "responseType": "ApplicationApiDescriptionModel",
          "pathParams": [],
          "queryParams": [
            {
              "name": "includeTypes",
              "in": "query",
              "modelType": "boolean"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "ApplicationApiDescriptionModel"
      ]
    },
    {
      "name": "AbpApplicationConfiguration",
      "paths": [
        {
          "path": "/api/abp/application-configuration",
          "operationId": "get",
          "method": "get",
          "tag": "AbpApplicationConfiguration",
          "responseType": "ApplicationConfigurationDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "ApplicationConfigurationDto"
      ]
    },
    {
      "name": "AbpTenant",
      "paths": [
        {
          "path": "/api/abp/multi-tenancy/tenants/by-name/{name}",
          "operationId": "findTenantByName",
          "method": "get",
          "tag": "AbpTenant",
          "responseType": "FindTenantResultDto",
          "pathParams": [
            {
              "name": "name",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/abp/multi-tenancy/tenants/by-id/{id}",
          "operationId": "findTenantById",
          "method": "get",
          "tag": "AbpTenant",
          "responseType": "FindTenantResultDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "FindTenantResultDto"
      ]
    },
    {
      "name": "Account",
      "paths": [
        {
          "path": "/api/account/register",
          "operationId": "register",
          "method": "post",
          "tag": "Account",
          "responseType": "IdentityUserDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "RegisterDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/account/send-password-reset-code",
          "operationId": "sendPasswordResetCode",
          "method": "post",
          "tag": "Account",
          "responseType": null,
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "SendPasswordResetCodeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/account/reset-password",
          "operationId": "resetPassword",
          "method": "post",
          "tag": "Account",
          "responseType": null,
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "ResetPasswordDto",
              "isRef": true
            }
          ]
        }
      ],
      "importTypes": [
        "IdentityUserDto",
        "RegisterDto",
        "SendPasswordResetCodeDto",
        "ResetPasswordDto"
      ]
    },
    {
      "name": "AppTreeNode",
      "paths": [
        {
          "path": "/api/tree/app-tree-node/tree",
          "operationId": "getTree",
          "method": "get",
          "tag": "AppTreeNode",
          "responseType": "AppTreeDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "application",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "parentId",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/tree/app-tree-node",
          "operationId": "create",
          "method": "post",
          "tag": "AppTreeNode",
          "responseType": "AppTreeNodeDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateAppTreeNodeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/tree/app-tree-node",
          "operationId": "getList",
          "method": "get",
          "tag": "AppTreeNode",
          "responseType": "AppTreeNodeDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "application",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "parentId",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/tree/app-tree-node/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "AppTreeNode",
          "responseType": "AppTreeNodeDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateAppTreeNodeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/tree/app-tree-node/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "AppTreeNode",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/tree/app-tree-node/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "AppTreeNode",
          "responseType": "AppTreeNodeDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "AppTreeDto",
        "AppTreeNodeDto",
        "CreateAppTreeNodeDto",
        "AppTreeNodeDtoPagedResultDto",
        "UpdateAppTreeNodeDto"
      ]
    },
    {
      "name": "BackgroundWorkerInstance",
      "paths": [
        {
          "path": "/api/background/background-worker-instance",
          "operationId": "create",
          "method": "post",
          "tag": "BackgroundWorkerInstance",
          "responseType": "BackgroundWorkerInstanceDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "SaveBackgroundWorkerInstanceDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/background/background-worker-instance",
          "operationId": "getList",
          "method": "get",
          "tag": "BackgroundWorkerInstance",
          "responseType": "BackgroundWorkerInstanceDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "key",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "status",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/background/background-worker-instance/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "BackgroundWorkerInstance",
          "responseType": "BackgroundWorkerInstanceDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "SaveBackgroundWorkerInstanceDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/background/background-worker-instance/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "BackgroundWorkerInstance",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/background/background-worker-instance/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "BackgroundWorkerInstance",
          "responseType": "BackgroundWorkerInstanceDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "BackgroundWorkerInstanceDto",
        "SaveBackgroundWorkerInstanceDto",
        "BackgroundWorkerInstanceDtoPagedResultDto"
      ]
    },
    {
      "name": "BackgroundWorkerLog",
      "paths": [
        {
          "path": "/api/background/background-worker-log/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "BackgroundWorkerLog",
          "responseType": "BackgroundWorkerLogDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/background/background-worker-log",
          "operationId": "getList",
          "method": "get",
          "tag": "BackgroundWorkerLog",
          "responseType": "BackgroundWorkerLogDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "start",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "end",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "instanceId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [
            {
              "name": "category",
              "in": "query",
              "isRef": true,
              "modelType": "LogLevel"
            }
          ],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "BackgroundWorkerLogDto",
        "BackgroundWorkerLogDtoPagedResultDto",
        "LogLevel"
      ]
    },
    {
      "name": "Dashboard",
      "paths": [
        {
          "path": "/api/gateways/dashboard/statistic",
          "operationId": "getStatistic",
          "method": "get",
          "tag": "Dashboard",
          "responseType": "DashboardStatistic",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "DashboardStatistic"
      ]
    },
    {
      "name": "Device",
      "paths": [
        {
          "path": "/api/gateways/device/{id}/fresh-key",
          "operationId": "freshKey",
          "method": "post",
          "tag": "Device",
          "responseType": "FreshKeyDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/device/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "Device",
          "responseType": "DeviceDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/device/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "Device",
          "responseType": "DeviceDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateDeviceDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/device/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "Device",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/device/{id}/extra-properties",
          "operationId": "updateExtraProperties",
          "method": "put",
          "tag": "Device",
          "responseType": "DeviceDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateExtraPropertiesDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/device",
          "operationId": "create",
          "method": "post",
          "tag": "Device",
          "responseType": "DeviceDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateDeviceDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/device",
          "operationId": "getList",
          "method": "get",
          "tag": "Device",
          "responseType": "DeviceDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "isActive",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "isGateway",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "parentId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "locationId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "key",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "includeLocation",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "includeTags",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "FreshKeyDto",
        "DeviceDto",
        "UpdateDeviceDto",
        "UpdateExtraPropertiesDto",
        "CreateDeviceDto",
        "DeviceDtoPagedResultDto"
      ]
    },
    {
      "name": "Driver",
      "paths": [
        {
          "path": "/api/gateways/driver/{id}/tag",
          "operationId": "addTag",
          "method": "post",
          "tag": "Driver",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "AddDriverTagDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/driver/{id}/tag",
          "operationId": "updateTag",
          "method": "put",
          "tag": "Driver",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateDriverTagDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/driver/{id}/tag",
          "operationId": "removeTag",
          "method": "delete",
          "tag": "Driver",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [
            {
              "name": "tagId",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/driver/{id}/settings",
          "operationId": "updateSettings",
          "method": "put",
          "tag": "Driver",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateDriverSettingsDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/driver/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "Driver",
          "responseType": "DriverDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/driver/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "Driver",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/driver/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "Driver",
          "responseType": "DriverDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateDriverDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/driver/start/{driverId}",
          "operationId": "start",
          "method": "post",
          "tag": "Driver",
          "responseType": "DriverDto",
          "pathParams": [
            {
              "name": "driverId",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/driver/pause/{driverId}",
          "operationId": "pause",
          "method": "post",
          "tag": "Driver",
          "responseType": "DriverDto",
          "pathParams": [
            {
              "name": "driverId",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/driver/stop/{driverId}",
          "operationId": "stop",
          "method": "post",
          "tag": "Driver",
          "responseType": "DriverDto",
          "pathParams": [
            {
              "name": "driverId",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/driver/{id}/extra-properties",
          "operationId": "updateExtraProperties",
          "method": "put",
          "tag": "Driver",
          "responseType": "DriverDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateExtraPropertiesDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/driver",
          "operationId": "create",
          "method": "post",
          "tag": "Driver",
          "responseType": "DriverDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateDriverDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/driver",
          "operationId": "getList",
          "method": "get",
          "tag": "Driver",
          "responseType": "DriverDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "isActive",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "driverDefinitionId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "category",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "subcategory",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "key",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "includeTags",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "includeDefinition",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [
            {
              "name": "runState",
              "in": "query",
              "isRef": true,
              "modelType": "DriverRunState"
            },
            {
              "name": "workMode",
              "in": "query",
              "isRef": true,
              "modelType": "DriverWorkMode"
            },
            {
              "name": "usageType",
              "in": "query",
              "isRef": true,
              "modelType": "DriverUsageType"
            }
          ],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "AddDriverTagDto",
        "UpdateDriverTagDto",
        "UpdateDriverSettingsDto",
        "DriverDto",
        "UpdateDriverDto",
        "UpdateExtraPropertiesDto",
        "CreateDriverDto",
        "DriverDtoPagedResultDto",
        "DriverRunState",
        "DriverWorkMode",
        "DriverUsageType"
      ]
    },
    {
      "name": "DriverDefinition",
      "paths": [
        {
          "path": "/api/gateways/driver-definition/find-support-driver-definitions",
          "operationId": "findSupportDriverDefinitions",
          "method": "post",
          "tag": "DriverDefinition",
          "responseType": "DriverDefinitionDto[]",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/driver-definition",
          "operationId": "create",
          "method": "post",
          "tag": "DriverDefinition",
          "responseType": "DriverDefinitionDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateDriverDefinitionDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/driver-definition",
          "operationId": "getList",
          "method": "get",
          "tag": "DriverDefinition",
          "responseType": "DriverDefinitionDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "isActive",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "category",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "product",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [
            {
              "name": "usageType",
              "in": "query",
              "isRef": true,
              "modelType": "DriverUsageType"
            },
            {
              "name": "channelType",
              "in": "query",
              "isRef": true,
              "modelType": "ChannelType"
            },
            {
              "name": "workMode",
              "in": "query",
              "isRef": true,
              "modelType": "DriverWorkMode"
            }
          ],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/driver-definition/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "DriverDefinition",
          "responseType": "DriverDefinitionDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateDriverDefinitionDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/driver-definition/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "DriverDefinition",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/driver-definition/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "DriverDefinition",
          "responseType": "DriverDefinitionDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "DriverDefinitionDto",
        "CreateDriverDefinitionDto",
        "DriverDefinitionDtoPagedResultDto",
        "DriverUsageType",
        "ChannelType",
        "DriverWorkMode",
        "UpdateDriverDefinitionDto"
      ]
    },
    {
      "name": "EmailSettings",
      "paths": [
        {
          "path": "/api/setting-management/emailing",
          "operationId": "get",
          "method": "get",
          "tag": "EmailSettings",
          "responseType": "EmailSettingsDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/setting-management/emailing",
          "operationId": "update",
          "method": "post",
          "tag": "EmailSettings",
          "responseType": null,
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateEmailSettingsDto",
              "isRef": true
            }
          ]
        }
      ],
      "importTypes": [
        "EmailSettingsDto",
        "UpdateEmailSettingsDto"
      ]
    },
    {
      "name": "Features",
      "paths": [
        {
          "path": "/api/feature-management/features",
          "operationId": "get",
          "method": "get",
          "tag": "Features",
          "responseType": "GetFeatureListResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "providerName",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "providerKey",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/feature-management/features",
          "operationId": "update",
          "method": "put",
          "tag": "Features",
          "responseType": null,
          "pathParams": [],
          "queryParams": [
            {
              "name": "providerName",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "providerKey",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateFeaturesDto",
              "isRef": true
            }
          ]
        }
      ],
      "importTypes": [
        "GetFeatureListResultDto",
        "UpdateFeaturesDto"
      ]
    },
    {
      "name": "Login",
      "paths": [
        {
          "path": "/api/account/login",
          "operationId": "login",
          "method": "post",
          "tag": "Login",
          "responseType": "AbpLoginResult",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UserLoginInfo",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/account/logout",
          "operationId": "logout",
          "method": "get",
          "tag": "Login",
          "responseType": null,
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/account/check-password",
          "operationId": "checkPassword",
          "method": "post",
          "tag": "Login",
          "responseType": "AbpLoginResult",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UserLoginInfo",
              "isRef": true
            }
          ]
        }
      ],
      "importTypes": [
        "AbpLoginResult",
        "UserLoginInfo"
      ]
    },
    {
      "name": "MaterialType",
      "paths": [
        {
          "path": "/api/nodes/material-type",
          "operationId": "create",
          "method": "post",
          "tag": "MaterialType",
          "responseType": "MaterialTypeDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateMaterialTypeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/material-type",
          "operationId": "getList",
          "method": "get",
          "tag": "MaterialType",
          "responseType": "MaterialTypeDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "name",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "category",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "key",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/material-type/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "MaterialType",
          "responseType": "MaterialTypeDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateMaterialTypeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/material-type/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "MaterialType",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/material-type/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "MaterialType",
          "responseType": "MaterialTypeDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "MaterialTypeDto",
        "CreateMaterialTypeDto",
        "MaterialTypeDtoPagedResultDto",
        "UpdateMaterialTypeDto"
      ]
    },
    {
      "name": "Measurement",
      "paths": [
        {
          "path": "/api/ems/measurement/aggregate-flows",
          "operationId": "getAggregateFlows",
          "method": "get",
          "tag": "Measurement",
          "responseType": "TimeValueDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "start",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "end",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "count",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "nodeIds",
              "in": "query",
              "modelType": "string[]"
            }
          ],
          "queryRefs": [
            {
              "name": "aggregateType",
              "in": "query",
              "isRef": true,
              "modelType": "AggregateType"
            }
          ],
          "bodyParams": []
        },
        {
          "path": "/api/ems/measurement/flows",
          "operationId": "getFlows",
          "method": "get",
          "tag": "Measurement",
          "responseType": "TimeValueDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "start",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "end",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [
            {
              "name": "aggregateType",
              "in": "query",
              "isRef": true,
              "modelType": "AggregateType"
            }
          ],
          "bodyParams": []
        },
        {
          "path": "/api/ems/measurement/real-flows",
          "operationId": "getRealFlows",
          "method": "get",
          "tag": "Measurement",
          "responseType": "TagValueAggrMeasurementDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "start",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "end",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "nodeIds",
              "in": "query",
              "modelType": "string[]"
            }
          ],
          "queryRefs": [
            {
              "name": "aggregateType",
              "in": "query",
              "isRef": true,
              "modelType": "AggregateType"
            }
          ],
          "bodyParams": []
        },
        {
          "path": "/api/ems/measurement/flow-used-by-day",
          "operationId": "getFlowUsedByDay",
          "method": "get",
          "tag": "Measurement",
          "responseType": "TimeValueDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "start",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "end",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/measurement/flow-used-by-day-count",
          "operationId": "getFlowUsedByDayCount",
          "method": "get",
          "tag": "Measurement",
          "responseType": "TimeValueDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "count",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/measurement/flow-used-by-month",
          "operationId": "getFlowUsedByMonth",
          "method": "get",
          "tag": "Measurement",
          "responseType": "TimeValueDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "start",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "end",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/measurement/flow-used-by-month-count",
          "operationId": "getFlowUsedByMonthCount",
          "method": "get",
          "tag": "Measurement",
          "responseType": "TimeValueDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "count",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/measurement/flow-used-by-week-count",
          "operationId": "getFlowUsedByWeekCount",
          "method": "get",
          "tag": "Measurement",
          "responseType": "TimeValueDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "count",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/measurement/flow-used-rank",
          "operationId": "getFlowUsedRank",
          "method": "get",
          "tag": "Measurement",
          "responseType": "RankValueDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "date",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "topN",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "asc",
              "in": "query",
              "modelType": "boolean"
            }
          ],
          "queryRefs": [
            {
              "name": "aggregateType",
              "in": "query",
              "isRef": true,
              "modelType": "AggregateType"
            }
          ],
          "bodyParams": []
        },
        {
          "path": "/api/ems/measurement/flow-used-statistic",
          "operationId": "getFlowUsedStatistic",
          "method": "get",
          "tag": "Measurement",
          "responseType": "GetAccFlowStatisticDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "TimeValueDto",
        "AggregateType",
        "TagValueAggrMeasurementDto",
        "RankValueDto",
        "GetAccFlowStatisticDto"
      ]
    },
    {
      "name": "Node",
      "paths": [
        {
          "path": "/api/nodes/node/node-material-types",
          "operationId": "getNodeMaterialTypes",
          "method": "get",
          "tag": "Node",
          "responseType": "NodeMaterialTypeDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "materialTypeId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "key",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "flowType",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "type",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/node/material-type",
          "operationId": "addMaterialType",
          "method": "post",
          "tag": "Node",
          "responseType": "NodeDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateNodeMaterialTypeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/node/material-type",
          "operationId": "updateMaterialType",
          "method": "put",
          "tag": "Node",
          "responseType": "NodeDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateNodeMaterialTypeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/node",
          "operationId": "create",
          "method": "post",
          "tag": "Node",
          "responseType": "NodeDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateNodeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/node",
          "operationId": "getList",
          "method": "get",
          "tag": "Node",
          "responseType": "NodeDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "name",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "key",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "parentId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "includeNodeType",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "includeNodeMaterialTypes",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "ids",
              "in": "query",
              "modelType": "string[]"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/node/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "Node",
          "responseType": "NodeDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateNodeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/node/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "Node",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/node/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "Node",
          "responseType": "NodeDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "NodeMaterialTypeDtoPagedResultDto",
        "NodeDto",
        "CreateNodeMaterialTypeDto",
        "UpdateNodeMaterialTypeDto",
        "CreateNodeDto",
        "NodeDtoPagedResultDto",
        "UpdateNodeDto"
      ]
    },
    {
      "name": "NodeProperty",
      "paths": [
        {
          "path": "/api/ems/node-property/measure-nodes",
          "operationId": "getMeasureNodes",
          "method": "get",
          "tag": "NodeProperty",
          "responseType": "NodePropertyDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "propertCode",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/node-property/{nodeId}/{propertyCode}/find",
          "operationId": "find",
          "method": "post",
          "tag": "NodeProperty",
          "responseType": "NodePropertyDto",
          "pathParams": [
            {
              "name": "nodeId",
              "in": "path",
              "required": true,
              "modelType": "string"
            },
            {
              "name": "propertyCode",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/node-property",
          "operationId": "create",
          "method": "post",
          "tag": "NodeProperty",
          "responseType": "NodePropertyDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateNodePropertyDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/ems/node-property",
          "operationId": "getList",
          "method": "get",
          "tag": "NodeProperty",
          "responseType": "NodePropertyDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "propertyCode",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "deviceIds",
              "in": "query",
              "modelType": "string[]"
            },
            {
              "name": "nodeIds",
              "in": "query",
              "modelType": "string[]"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/node-property/{nodeId}/{propertyCode}",
          "operationId": "update",
          "method": "put",
          "tag": "NodeProperty",
          "responseType": "NodePropertyDto",
          "pathParams": [
            {
              "name": "nodeId",
              "in": "path",
              "required": true,
              "modelType": "string"
            },
            {
              "name": "propertyCode",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateNodePropertyDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/ems/node-property/{nodeId}/{propertyCode}",
          "operationId": "delete",
          "method": "delete",
          "tag": "NodeProperty",
          "responseType": null,
          "pathParams": [
            {
              "name": "nodeId",
              "in": "path",
              "required": true,
              "modelType": "string"
            },
            {
              "name": "propertyCode",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/node-property/{nodeId}/{propertyCode}",
          "operationId": "get",
          "method": "get",
          "tag": "NodeProperty",
          "responseType": "NodePropertyDto",
          "pathParams": [
            {
              "name": "nodeId",
              "in": "path",
              "required": true,
              "modelType": "string"
            },
            {
              "name": "propertyCode",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "NodePropertyDto",
        "CreateNodePropertyDto",
        "NodePropertyDtoPagedResultDto",
        "UpdateNodePropertyDto"
      ]
    },
    {
      "name": "NodeType",
      "paths": [
        {
          "path": "/api/nodes/node-type",
          "operationId": "create",
          "method": "post",
          "tag": "NodeType",
          "responseType": "NodeTypeDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateNodeTypeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/node-type",
          "operationId": "getList",
          "method": "get",
          "tag": "NodeType",
          "responseType": "NodeTypeDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "key",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "code",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "name",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "category",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/node-type/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "NodeType",
          "responseType": "NodeTypeDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateNodeTypeDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/node-type/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "NodeType",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/node-type/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "NodeType",
          "responseType": "NodeTypeDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "NodeTypeDto",
        "CreateNodeTypeDto",
        "NodeTypeDtoPagedResultDto",
        "UpdateNodeTypeDto"
      ]
    },
    {
      "name": "Permissions",
      "paths": [
        {
          "path": "/api/permission-management/permissions",
          "operationId": "get",
          "method": "get",
          "tag": "Permissions",
          "responseType": "GetPermissionListResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "providerName",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "providerKey",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/permission-management/permissions",
          "operationId": "update",
          "method": "put",
          "tag": "Permissions",
          "responseType": null,
          "pathParams": [],
          "queryParams": [
            {
              "name": "providerName",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "providerKey",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdatePermissionsDto",
              "isRef": true
            }
          ]
        }
      ],
      "importTypes": [
        "GetPermissionListResultDto",
        "UpdatePermissionsDto"
      ]
    },
    {
      "name": "Profile",
      "paths": [
        {
          "path": "/api/account/my-profile",
          "operationId": "get",
          "method": "get",
          "tag": "Profile",
          "responseType": "ProfileDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/account/my-profile",
          "operationId": "update",
          "method": "put",
          "tag": "Profile",
          "responseType": "ProfileDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateProfileDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/account/my-profile/change-password",
          "operationId": "changePassword",
          "method": "post",
          "tag": "Profile",
          "responseType": null,
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "ChangePasswordInput",
              "isRef": true
            }
          ]
        }
      ],
      "importTypes": [
        "ProfileDto",
        "UpdateProfileDto",
        "ChangePasswordInput"
      ]
    },
    {
      "name": "Property",
      "paths": [
        {
          "path": "/api/nodes/property",
          "operationId": "create",
          "method": "post",
          "tag": "Property",
          "responseType": "PropertyDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreatePropertyDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/property",
          "operationId": "getList",
          "method": "get",
          "tag": "Property",
          "responseType": "PropertyDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "propertyDefinitionId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "isMain",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "entityType",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "entityId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/property/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "Property",
          "responseType": "PropertyDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdatePropertyDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/property/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "Property",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/property/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "Property",
          "responseType": "PropertyDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "PropertyDto",
        "CreatePropertyDto",
        "PropertyDtoPagedResultDto",
        "UpdatePropertyDto"
      ]
    },
    {
      "name": "PropertyDefinition",
      "paths": [
        {
          "path": "/api/nodes/property-definition",
          "operationId": "create",
          "method": "post",
          "tag": "PropertyDefinition",
          "responseType": "PropertyDefinitionDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreatePropertyDefinitionDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/property-definition",
          "operationId": "getList",
          "method": "get",
          "tag": "PropertyDefinition",
          "responseType": "PropertyDefinitionDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "name",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "category",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "key",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/property-definition/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "PropertyDefinition",
          "responseType": "PropertyDefinitionDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdatePropertyDefinitionDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/nodes/property-definition/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "PropertyDefinition",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/nodes/property-definition/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "PropertyDefinition",
          "responseType": "PropertyDefinitionDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "PropertyDefinitionDto",
        "CreatePropertyDefinitionDto",
        "PropertyDefinitionDtoPagedResultDto",
        "UpdatePropertyDefinitionDto"
      ]
    },
    {
      "name": "RealTime",
      "paths": [
        {
          "path": "/api/ems/real-time/current-values",
          "operationId": "getCurrentValues",
          "method": "get",
          "tag": "RealTime",
          "responseType": "TagRealMeasurementDto[]",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/real-time/real-flows",
          "operationId": "getRealFlows",
          "method": "get",
          "tag": "RealTime",
          "responseType": "GetRealFlowsItemDto[]",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/real-time/real-values",
          "operationId": "getRealValues",
          "method": "get",
          "tag": "RealTime",
          "responseType": "TimeValueDto[]",
          "pathParams": [],
          "queryParams": [
            {
              "name": "nodeId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "propertyCodes",
              "in": "query",
              "modelType": "string[]"
            },
            {
              "name": "start",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "end",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "TagRealMeasurementDto",
        "GetRealFlowsItemDto",
        "TimeValueDto"
      ]
    },
    {
      "name": "Role",
      "paths": [
        {
          "path": "/api/identity/roles/all",
          "operationId": "getAllList",
          "method": "get",
          "tag": "Role",
          "responseType": "IdentityRoleDtoListResultDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/roles",
          "operationId": "getList",
          "method": "get",
          "tag": "Role",
          "responseType": "IdentityRoleDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "filter",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/roles",
          "operationId": "create",
          "method": "post",
          "tag": "Role",
          "responseType": "IdentityRoleDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "IdentityRoleCreateDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/identity/roles/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "Role",
          "responseType": "IdentityRoleDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/roles/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "Role",
          "responseType": "IdentityRoleDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "IdentityRoleUpdateDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/identity/roles/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "Role",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "IdentityRoleDtoListResultDto",
        "IdentityRoleDtoPagedResultDto",
        "IdentityRoleDto",
        "IdentityRoleCreateDto",
        "IdentityRoleUpdateDto"
      ]
    },
    {
      "name": "Sample",
      "paths": [
        {
          "path": "/api/Ems/sample",
          "operationId": "get",
          "method": "get",
          "tag": "Sample",
          "responseType": "SampleDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/Ems/sample/authorized",
          "operationId": "getAuthorized",
          "method": "get",
          "tag": "Sample",
          "responseType": "SampleDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/sample",
          "operationId": "get",
          "method": "get",
          "tag": "Sample",
          "responseType": "SampleDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/ems/sample/authorized",
          "operationId": "getAuthorized",
          "method": "get",
          "tag": "Sample",
          "responseType": "SampleDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "SampleDto"
      ]
    },
    {
      "name": "Tag",
      "paths": [
        {
          "path": "/api/gateways/tag",
          "operationId": "create",
          "method": "post",
          "tag": "Tag",
          "responseType": "TagDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateTagDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/tag",
          "operationId": "getList",
          "method": "get",
          "tag": "Tag",
          "responseType": "TagDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "isActive",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "deviceId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "driverId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "tagDefinitionId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "includeDevice",
              "in": "query",
              "modelType": "boolean"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [
            {
              "name": "readMode",
              "in": "query",
              "isRef": true,
              "modelType": "ReadMode"
            },
            {
              "name": "tagType",
              "in": "query",
              "isRef": true,
              "modelType": "TagType"
            }
          ],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/tag/tags-by-driver/{driverId}",
          "operationId": "getTagsByDriver",
          "method": "get",
          "tag": "Tag",
          "responseType": "TagDto[]",
          "pathParams": [
            {
              "name": "driverId",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/tag/tags-by-definition/{tagDefinitionId}",
          "operationId": "getTagsByDefinition",
          "method": "get",
          "tag": "Tag",
          "responseType": "TagDto[]",
          "pathParams": [
            {
              "name": "tagDefinitionId",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/tag/tags-by-device/{deviceId}",
          "operationId": "getTagsByDevice",
          "method": "get",
          "tag": "Tag",
          "responseType": "TagDto[]",
          "pathParams": [
            {
              "name": "deviceId",
              "in": "path",
              "description": "",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/tag/{id}/extra-properties",
          "operationId": "updateExtraProperties",
          "method": "put",
          "tag": "Tag",
          "responseType": "TagDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "description": "采集点Id",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateExtraPropertiesDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/tag/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "Tag",
          "responseType": "TagDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateTagDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/tag/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "Tag",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/tag/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "Tag",
          "responseType": "TagDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "TagDto",
        "CreateTagDto",
        "TagDtoPagedResultDto",
        "ReadMode",
        "TagType",
        "UpdateExtraPropertiesDto",
        "UpdateTagDto"
      ]
    },
    {
      "name": "TagDefinition",
      "paths": [
        {
          "path": "/api/gateways/tag-definition/{id}/extra-properties",
          "operationId": "updateExtraProperties",
          "method": "put",
          "tag": "TagDefinition",
          "responseType": "TagDefinitionDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateExtraPropertiesDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/tag-definition",
          "operationId": "create",
          "method": "post",
          "tag": "TagDefinition",
          "responseType": "TagDefinitionDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "CreateTagDefinitionDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/tag-definition",
          "operationId": "getList",
          "method": "get",
          "tag": "TagDefinition",
          "responseType": "TagDefinitionDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "key",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [
            {
              "name": "valueType",
              "in": "query",
              "isRef": true,
              "modelType": "TagValueType"
            },
            {
              "name": "readMode",
              "in": "query",
              "isRef": true,
              "modelType": "ReadMode"
            }
          ],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/tag-definition/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "TagDefinition",
          "responseType": "TagDefinitionDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "UpdateTagDefinitionDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/gateways/tag-definition/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "TagDefinition",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/tag-definition/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "TagDefinition",
          "responseType": "TagDefinitionDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "TagDefinitionDto",
        "UpdateExtraPropertiesDto",
        "CreateTagDefinitionDto",
        "TagDefinitionDtoPagedResultDto",
        "TagValueType",
        "ReadMode",
        "UpdateTagDefinitionDto"
      ]
    },
    {
      "name": "TagValue",
      "paths": [
        {
          "path": "/api/gateways/tag-value/{tagId}/{clock}",
          "operationId": "get",
          "method": "get",
          "tag": "TagValue",
          "responseType": "TagValueDto",
          "pathParams": [
            {
              "name": "tagId",
              "in": "path",
              "required": true,
              "modelType": "string"
            },
            {
              "name": "clock",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/gateways/tag-value",
          "operationId": "getList",
          "method": "get",
          "tag": "TagValue",
          "responseType": "TagValueDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "start",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "end",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "tagId",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "TagValueDto",
        "TagValueDtoPagedResultDto"
      ]
    },
    {
      "name": "Tenant",
      "paths": [
        {
          "path": "/api/multi-tenancy/tenants/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "Tenant",
          "responseType": "TenantDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/multi-tenancy/tenants/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "Tenant",
          "responseType": "TenantDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "TenantUpdateDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/multi-tenancy/tenants/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "Tenant",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/multi-tenancy/tenants",
          "operationId": "getList",
          "method": "get",
          "tag": "Tenant",
          "responseType": "TenantDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "filter",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/multi-tenancy/tenants",
          "operationId": "create",
          "method": "post",
          "tag": "Tenant",
          "responseType": "TenantDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "TenantCreateDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/multi-tenancy/tenants/{id}/default-connection-string",
          "operationId": "getDefaultConnectionString",
          "method": "get",
          "tag": "Tenant",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/multi-tenancy/tenants/{id}/default-connection-string",
          "operationId": "updateDefaultConnectionString",
          "method": "put",
          "tag": "Tenant",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [
            {
              "name": "defaultConnectionString",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/multi-tenancy/tenants/{id}/default-connection-string",
          "operationId": "deleteDefaultConnectionString",
          "method": "delete",
          "tag": "Tenant",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "TenantDto",
        "TenantUpdateDto",
        "TenantDtoPagedResultDto",
        "TenantCreateDto"
      ]
    },
    {
      "name": "User",
      "paths": [
        {
          "path": "/api/identity/users/{id}",
          "operationId": "get",
          "method": "get",
          "tag": "User",
          "responseType": "IdentityUserDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/users/{id}",
          "operationId": "update",
          "method": "put",
          "tag": "User",
          "responseType": "IdentityUserDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "IdentityUserUpdateDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/identity/users/{id}",
          "operationId": "delete",
          "method": "delete",
          "tag": "User",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/users",
          "operationId": "getList",
          "method": "get",
          "tag": "User",
          "responseType": "IdentityUserDtoPagedResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "filter",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/users",
          "operationId": "create",
          "method": "post",
          "tag": "User",
          "responseType": "IdentityUserDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "IdentityUserCreateDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/identity/users/{id}/roles",
          "operationId": "getRoles",
          "method": "get",
          "tag": "User",
          "responseType": "IdentityRoleDtoListResultDto",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/users/{id}/roles",
          "operationId": "updateRoles",
          "method": "put",
          "tag": "User",
          "responseType": null,
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": [
            {
              "name": "input",
              "in": "body",
              "modelType": "IdentityUserUpdateRolesDto",
              "isRef": true
            }
          ]
        },
        {
          "path": "/api/identity/users/assignable-roles",
          "operationId": "getAssignableRoles",
          "method": "get",
          "tag": "User",
          "responseType": "IdentityRoleDtoListResultDto",
          "pathParams": [],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/users/by-username/{userName}",
          "operationId": "findByUsername",
          "method": "get",
          "tag": "User",
          "responseType": "IdentityUserDto",
          "pathParams": [
            {
              "name": "userName",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/users/by-email/{email}",
          "operationId": "findByEmail",
          "method": "get",
          "tag": "User",
          "responseType": "IdentityUserDto",
          "pathParams": [
            {
              "name": "email",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "IdentityUserDto",
        "IdentityUserUpdateDto",
        "IdentityUserDtoPagedResultDto",
        "IdentityUserCreateDto",
        "IdentityRoleDtoListResultDto",
        "IdentityUserUpdateRolesDto"
      ]
    },
    {
      "name": "UserLookup",
      "paths": [
        {
          "path": "/api/identity/users/lookup/{id}",
          "operationId": "findById",
          "method": "get",
          "tag": "UserLookup",
          "responseType": "UserData",
          "pathParams": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/users/lookup/by-username/{userName}",
          "operationId": "findByUserName",
          "method": "get",
          "tag": "UserLookup",
          "responseType": "UserData",
          "pathParams": [
            {
              "name": "userName",
              "in": "path",
              "required": true,
              "modelType": "string"
            }
          ],
          "queryParams": [],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/users/lookup/search",
          "operationId": "search",
          "method": "get",
          "tag": "UserLookup",
          "responseType": "UserDataListResultDto",
          "pathParams": [],
          "queryParams": [
            {
              "name": "filter",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "sorting",
              "in": "query",
              "modelType": "string"
            },
            {
              "name": "skipCount",
              "in": "query",
              "modelType": "number"
            },
            {
              "name": "maxResultCount",
              "in": "query",
              "modelType": "number"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        },
        {
          "path": "/api/identity/users/lookup/count",
          "operationId": "getCount",
          "method": "get",
          "tag": "UserLookup",
          "responseType": null,
          "pathParams": [],
          "queryParams": [
            {
              "name": "filter",
              "in": "query",
              "modelType": "string"
            }
          ],
          "queryRefs": [],
          "bodyParams": []
        }
      ],
      "importTypes": [
        "UserData",
        "UserDataListResultDto"
      ]
    }
  ]
}